name: Tests
on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '2.7'
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        run: flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics --extend-exclude ckan
      - name: Run flake8
        run: flake8 . --count --statistics --exclude ckan

  test:
    needs: lint
    strategy:
      matrix:
        ckan-version: [2.9, 2.9-py2]
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
          image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v3
    - name: Create solr container
      run: |
        /usr/bin/docker create --name test_solr --network ${{ job.container.network }} --network-alias solr \
          --workdir /__w/ckanext-stadtzh-harvest/ckanext-stadtzh-harvest \
          -e "SOLR_HEAP=1024m" -e "SOLR_SCHEMA_FILE=/opt/solr/server/solr/configsets/ckan/conf/schema.xml" \
          -e GITHUB_ACTIONS=true -e CI=true -v "${{ github.workspace }}/solr/schema.xml":"/opt/solr/server/solr/configsets/ckan/conf/managed-schema" \
          -v "${{ github.workspace }}/solr/german_dictionary.txt":"/opt/solr/server/solr/configsets/ckan/conf/german_dictionary.txt" \
          -v "${{ github.workspace }}/solr/solrconfig.xml":"/opt/solr/server/solr/configsets/ckan/conf/solrconfig.xml" \
          ckan/ckan-solr:2.9-solr8
        docker start test_solr
        docker ps --all --filter name=test_solr --filter status=running --no-trunc --format "{{.ID}} {{.Status}}"
        docker inspect --format "{{range .Config.Env}}{{println .}}{{end}}" test_solr
    - name: Create ckan container
      run: |
        /usr/bin/docker create --name test_ckan --network ${{ job.container.network }} --network-alias ckan \
          -e "HOME=/github/home" -e GITHUB_ACTIONS=true -e CI=true -v "/var/run/docker.sock":"/var/run/docker.sock" \
          -v "/home/runner/work":"/__w" -v "/home/runner/runners/2.299.1/externals":"/__e":ro \
          -v "/home/runner/work/_temp":"/__w/_temp" -v "/home/runner/work/_actions":"/__w/_actions" \
          -v "/opt/hostedtoolcache":"/__t" -v "/home/runner/work/_temp/_github_home":"/github/home" \
          -v "/home/runner/work/_temp/_github_workflow":"/github/workflow" \
          --entrypoint "tail" openknowledge/ckan-dev:${{ matrix.ckan-version }} "-f" "/dev/null"
        docker start test_ckan
        docker ps --all --filter name=test_ckan --filter status=running --no-trunc --format "{{.ID}} {{.Status}}"
        docker inspect --format "{{range .Config.Env}}{{println .}}{{end}}" test_ckan
    - name: Install requirements
      run: |
        docker exec test_ckan pwd && ls && ls /__w/
        docker exec test_ckan pip install -r ${{ github.workspace }}/requirements.txt
        docker exec test_ckan pip install -r ${{ github.workspace }}/dev-requirements.txt
        docker exec test_ckan pip install -e ${{ github.workspace }}/
        docker exec test_ckan pip install -U requests[security]
    - name: Install required ckanexts
      run: |
        pip install -e git+https://github.com/ckan/ckanext-dcat.git#egg=ckanext-dcat && \
          pip install -e git+https://github.com/ckan/ckanext-harvest.git#egg=ckanext-harvest && \
          pip install -r https://raw.githubusercontent.com/ckan/ckanext-harvest/master/requirements.txt && \
          pip install -e git+https://github.com/ckan/ckanext-xloader.git#egg=ckanext-xloader && \
          pip install -r https://raw.githubusercontent.com/ckan/ckanext-xloader/master/requirements.txt && \
          pip install -e git+https://github.com/opendatazurich/ckanext-stadtzh-theme.git@dockerizing#egg=ckanext-stadtzh-theme && \
          pip install -r https://raw.githubusercontent.com/opendatazurich/ckanext-stadtzh-theme/dockerizing/pip-requirements.txt
    - name: Install py2 ckanext-dcat requirements
      if: ${{ matrix.ckan-version == '2.9-py2' }}
      run: |
        pip install -r https://raw.githubusercontent.com/ckan/ckanext-dcat/master/requirements-py2.txt
    - name: Install py3 ckanext-dcat requirements
      if: ${{ matrix.ckan-version != '2.9-py2' }}
      run: |
        pip install -r https://raw.githubusercontent.com/ckan/ckanext-dcat/master/requirements.txt
    - name: Adjust test.ini
      run: |
        # Replace default path to CKAN core config file with the one on the container
        sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini
    - name: Setup extension (CKAN >= 2.9)
      run: |
        ckan config-tool test.ini "ckan.plugins = "
        ckan -c test.ini db init
        ckan config-tool test.ini "ckan.plugins = harvest stadtzh_harvester stadtzhtheme"
    - name: Check solr schema
      run: |
        curl http://solr:8983/solr/admin/cores?action=STATUS
        curl http://solr:8983/solr/ckan/schema
        curl http://solr:8983/solr/ckan/admin/file
    - name: Run tests
      run: pytest --ckan-ini=test.ini --cov=ckanext.stadtzhharvest --disable-warnings ckanext/stadtzhharvest/tests
